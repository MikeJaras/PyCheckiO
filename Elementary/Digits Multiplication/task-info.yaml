type: checkiO
files:
- name: mission.py
  visible: true
  text: "def checkio(number: int) -> int:\n    length=len(str(number))\n    p=str(number)\n\
    \    y=1\n    for i in range(0,length):\n        x=int(p[i])\n        if x > 0:\n\
    \            y = y * x\n    return y\n\n\nif __name__ == '__main__':\n    print('Example:')\n\
    \    print(checkio(123405))\n    \n    # These \"asserts\" using only for self-checking\
    \ and not necessary for auto-testing\n    assert checkio(123405) == 120\n    assert\
    \ checkio(999) == 729\n    assert checkio(1000) == 1\n    assert checkio(1111)\
    \ == 1\n    print(\"Coding complete? Click 'Check' to review your tests and earn\
    \ cool rewards!\")\n"
  learner_created: false
status: Solved
code: "def checkio(number: int) -> int:\n    length=len(str(number))\n    p=str(number)\n\
  \    y=1\n    for i in range(0,length):\n        x=int(p[i])\n        if x > 0:\n\
  \            y = y * x\n    return y\n\n\nif __name__ == '__main__':\n    print('Example:')\n\
  \    print(checkio(123405))\n    \n    # These \"asserts\" using only for self-checking\
  \ and not necessary for auto-testing\n    assert checkio(123405) == 120\n    assert\
  \ checkio(999) == 729\n    assert checkio(1000) == 1\n    assert checkio(1111) ==\
  \ 1\n    print(\"Coding complete? Click 'Check' to review your tests and earn cool\
  \ rewards!\")\n"
seconds_from_change: 22246773
